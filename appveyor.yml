version: 1.14.{build}
shallow_clone: true



environment:
  matrix:
    - build_platform: "x86"
      build_compiler: "msvc"
    
    - build_platform: "x64"
      build_compiler: "msvc"
    
    - build_platform: "x86"
      build_compiler: "mingw"
    
    - build_platform: "x64"
      build_compiler: "mingw"



install:
  - ps: if($env:build_platform -eq 'x64') {
          $env:vcvar_arg = 'x86_amd64';
          $env:rel_dir = 'x64\Release';
        }
        else {
          $env:vcvar_arg = 'x86';
          $env:rel_dir = 'Release';
        }
  
  # get common functions
  - git clone https://github.com/imazen/gd-appveyor-helpers
  - ps: . .\gd-appveyor-helpers\appveyor_funcs.ps1
  
  # get mingw-w64 (C:\mingw64)
  - ps: if($env:build_compiler -eq 'mingw' -and $env:build_platform -eq 'x64') {
      invoke 'curl' '-L -o mw64.7z "http://libgd.blob.core.windows.net/mingw/x86_64-4.9.1-release-posix-seh-rt_v3-rev1.7z"';
      invoke '7z' 'x -oC:\ mw64.7z'; }
  
  # sh is breaking mingw builds; remove
  - for %%i in (sh.exe) do @del "%%~$PATH:i"




build_script:
  
  - ps: $nupkg_b = "libiconv-$($env:build_compiler)-$($env:build_platform)-$($env:APPVEYOR_REPO_BRANCH)";
  - ps: $nupkg_c = "libiconv-$($env:build_compiler)-$($env:build_platform)-$($env:APPVEYOR_REPO_COMMIT)";
  
  # build msvc
  
  - '"C:\Program Files (x86)\Microsoft Visual Studio 12.0\VC\vcvarsall" %vcvar_arg%'
  
  - SET zip=libiconv-msvc12-%build_platform%.zip
  
  - if [%build_compiler%]==[msvc] (
      msbuild MSVC12\libiconv.sln /p:Configuration=Release /v:m &&
      7z a %zip% .\MSVC12\libiconv_static\%rel_dir%\libiconv_a.lib .\MSVC12\libiconv_dll\%rel_dir%\libiconv.dll .\MSVC12\%rel_dir%\libiconv.lib .\source\include\iconv.h &&
      appveyor PushArtifact %zip% )
  
  - ps: if(Test-Path $env:zip) {
          zip2nuget $env:zip $nupkg_b;
          zip2nuget $env:zip $nupkg_c; }
  
  
  # build mingw
  
  - if [%build_compiler%]==[mingw] if [%build_platform%]==[x86] SET PATH=C:\MinGW\bin;%PATH%
  - if [%build_compiler%]==[mingw] if [%build_platform%]==[x64] SET PATH=C:\mingw64\bin;%PATH%
  
  - SET zip=libiconv-mingw-%build_platform%.zip
  
  - if [%build_compiler%]==[mingw] (
      cd source &&
      c:\mingw\msys\1.0\bin\bash -c "PATH=/c/mingw/msys/1.0/bin:$PATH; ./configure --enable-static; make; make check" &&
      7z a %zip% .\lib\.libs\libiconv.a .\lib\.libs\libiconv-2.dll .\lib\.libs\libiconv.dll.a .\include\iconv.h &&
      appveyor PushArtifact %zip% &&
      cd .. )
  
  - SET zip=source\%zip%
  - ps: if(Test-Path $env:zip) {
          zip2nuget $env:zip $nupkg_b;
          zip2nuget $env:zip $nupkg_c; }


test_script:

on_success:
  - ps: Push-AppveyorArtifact "$nupkg_b*.nupkg"
  - ps: Push-AppveyorArtifact "$nupkg_c*.nupkg"
